name: Release Pipeline

on:
  release:
    types: [published]

jobs:
  deploy-contracts:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Deploy smart contracts to mainnet
      run: npm run deploy:mainnet
      env:
        PRIVATE_KEY: ${{ secrets.MAINNET_PRIVATE_KEY }}
        ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        
    - name: Update contract addresses
      run: |
        # Extract new contract address and update environment
        CONTRACT_ADDRESS=$(cat deployment-log.json | jq -r '.contractAddress')
        echo "PRODUCTION_CONTRACT_ADDRESS=$CONTRACT_ADDRESS" >> $GITHUB_ENV
        
    - name: Create deployment artifact
      run: |
        echo "Contract deployed at: $PRODUCTION_CONTRACT_ADDRESS" > deployment-info.txt
        echo "Block: $(cat deployment-log.json | jq -r '.blockNumber')" >> deployment-info.txt
        echo "Transaction: $(cat deployment-log.json | jq -r '.transactionHash')" >> deployment-info.txt
        
    - name: Upload deployment info
      uses: actions/upload-artifact@v3
      with:
        name: contract-deployment
        path: deployment-info.txt

  notify-deployment:
    runs-on: ubuntu-latest
    needs: deploy-contracts
    
    steps:
    - name: Send deployment notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          ðŸš€ GoNFTme Release ${{ github.ref_name }} deployed successfully!
          
          ðŸ“‹ **Deployment Summary:**
          â€¢ Smart contracts deployed to Base mainnet
          â€¢ Frontend deployed to production
          â€¢ All tests passed âœ…
          
          ðŸ”— **Links:**
          â€¢ Production: https://gonftme.com
          â€¢ Contract: View on BaseScan
          
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
